apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook":  post-install, post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
       - name: wait-for-webserver
         image: curlimages/curl:latest
         command: ["/bin/sh","-c"]
         args: ["while [ $(curl -sw '%{http_code}' http://skipper/monitor -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for the webserver...'; done"]
      containers:
      - name: install-skipper-setup-config
        image: "{{ .Values.postUpgradeImage.repository }}:{{ .Values.postUpgradeImage.tag }}"
        imagePullPolicy: {{ .Values.postUpgradeImage.pullPolicy }}
        env:
          - name: mongoHost
            value: "{{ .Values.mongo.connectionString }}"
          - name: datacenter
            value: {{ .Values.datacenter.json | toJson | quote }}
          - name: skipperHost
            value: skipper
