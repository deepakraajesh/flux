{{- if .Values.envoy.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.envoy.configMapName }}
data:
  envoy.yaml: |
    stats_sinks:
    - name: envoy.stat_sinks.dog_statsd
      typed_config:
        "@type": type.googleapis.com/envoy.config.metrics.v3.DogStatsdSink
        address:
          socket_address:
            address: {{ .Values.envoy.upstreams.statsdHost }}
            port_value: 8125
            protocol: TCP
        prefix: skipper-envoy
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 1000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              http_filters:
              - name: envoy.filters.http.ext_authz
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                  http_service:
                    path_prefix: "/v1/auth/sso-ambassador/"
                    server_uri:
                      uri: {{ .Values.envoy.upstreams.consoleProxyUrl }}
                      cluster: ext-authz
                      timeout: 5s
                    authorization_request:
                      allowed_headers:
                        patterns:
                        - exact: x-xsrf-token
                        - exact: Cookie
                        - exact: cookie
                    authorization_response:
                      allowed_upstream_headers_to_append:
                        patterns:
                        - exact: x-xsrf-token-set
                        - exact: Cookie
                        - exact: cookie
                        - prefix: x-auth-
              - name: envoy.filters.http.router
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains:
                  - "*"
                  response_headers_to_add: [{"header":{"key":x-xsrf-token-set,"value":"%REQ(x-xsrf-token-set)%"},"append":false}]
                  routes:
                  - name: falcon
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/site\/.*\/dp\/.*
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: "\\/skipper\\/(.*)"
                        substitution: /\1
                      cluster: falcon_service
                      timeout: 180s
                  - name: toucan_mapping_ss_ftu
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/site\/.*\/toucan\/.*
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: ^\/skipper\/site\/.*\/toucan\/(.*)
                        substitution: /toucan/\1
                      cluster: toucan_service
                      timeout: 180s
                  - name: toucan_mapping
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/admin\/toucan\/.*
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: ^\/skipper\/admin\/toucan\/(.*)
                        substitution: /toucan/\1
                      cluster: toucan_service
                      timeout: 180s
                  - name: viper_mapping
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/site\/.*\/upload/catalog\/.*
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)
                        substitution: /setup/\1
                      cluster: viper_service
                      timeout: 180s
                  - name: viper_manual_trigger
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/v1\/site\/.*\/index\/.*
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)
                        substitution: /setup/\1
                      cluster: viper_service
                      timeout: 180s
                  - name: viper_mapping_old
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/admin\/viper\/onboarding\/.*\/upload/catalog\/.*
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/admin\/viper\/onboarding\/(.*)
                        substitution: /setup/site/\1
                      cluster: viper_service
                      timeout: 180s
                  - name: ner_related_apis
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/.*\/site\/.*\/ner\/(entityFieldMapping|entityBoost|entities|settings|manageEntities)
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)/site\/(.*)/ner\/(.*)
                        substitution: /hagrid/api/\1/sites/\2/ner/\3
                      cluster: hagrid_service
                      timeout: 180s
                  - name: ner_tags
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/.*\/site\/.*\/ner\/tags
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)/site\/(.*)/ner\/tags
                        substitution: /ner/\1/sites/\2/tag
                      cluster: hagrid_service
                      timeout: 180s
                  - name: ner_tags_demo
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/.*\/verticals\/.*\/tag
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)\/verticals\/(.*)\/tag
                        substitution: /ner/\1/verticals/\2/tag
                      cluster: hagrid_service
                      timeout: 180s
                  - name: ub,popularity
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/.*\/site\/.*\/(ub|popularity).*
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)/site\/(.*)
                        substitution: /hagrid/api/\1/sites/\2
                      cluster: hagrid_service
                      timeout: 180s

                  - name: measurements_units_apis
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/.*\/site\/.*\/measurements\/units
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)/site\/(.*)/measurements\/units
                        substitution: /ner/\1/sites/\2/measurements/units
                      cluster: hagrid_service
                      timeout: 180s

                  - name: measurements_tags_apis
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/.*\/site\/.*\/measurements\/tags
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)/site\/(.*)/measurements\/tags
                        substitution: /ner/\1/sites/\2/dimensions
                      cluster: hagrid_service
                      timeout: 180s

                  - name: measurements_related_apis
                    match:
                      safe_regex:
                        google_re2: {}
                        regex: ^\/skipper\/.*\/site\/.*\/measurements(.*|\/fields|\/settings|\/status)
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)/site\/(.*)/measurements(.*)
                        substitution: /hagrid/api/\1/sites/\2/measurements\3
                      cluster: hagrid_service
                      timeout: 180s

                  - name: skipper_auth_mapping
                    match:
                      prefix: /skipper/auth/
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)
                        substitution: /\1
                      cluster: ext-authz
                      timeout: 180s
                  - name: gcp_activation
                    match:
                      prefix: /skipper/gcp/activation/
                    route:
                      regex_rewrite:
                        pattern:
                          google_re2: {}
                          regex: \/skipper\/(.*)
                        substitution: /\1
                      cluster: skipper_service
                      timeout: 180s
                    typed_per_filter_config:
                      envoy.filters.http.ext_authz:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                        disabled: true
                  - name: skipper_health_check
                    match:
                      prefix: /skipper/services/healthcheck
                    route:
                      prefix_rewrite: /services/healthcheck
                      cluster: skipper_service
                      timeout: 180s
                    typed_per_filter_config:
                      envoy.filters.http.ext_authz:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                        disabled: true
                  - name: skipper
                    match:
                      prefix: "/skipper/"
                    route:
                      cluster: skipper_service
                      timeout: 180s
      clusters:
      - name: skipper_service
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: skipper_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.envoy.upstreams.skipperUrl }}
                    port_value: 80
      - name: falcon_service
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: falcon_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.envoy.upstreams.falconUrl }}
                    port_value: 80
      - name: ext-authz
        connect_timeout: 0.25s
        type: logical_dns
        lb_policy: round_robin
        load_assignment:
          cluster_name: ext-authz
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.envoy.upstreams.consoleProxyUrl }}
                    port_value: 80
      - name: asterix_service
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: asterix_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.envoy.upstreams.asterixUrl }}
                    port_value: 80
      - name: toucan_service
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: toucan_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.envoy.upstreams.toucanUrl }}
                    port_value: 80
      - name: viper_service
        connect_timeout: 10s
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: viper_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.envoy.upstreams.viperUrl }}
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: httpbin.org
            common_tls_context:
              validation_context:
                match_subject_alt_names:
                  - exact: "*.unbxd.io"
                trusted_ca:
                  filename: /etc/ssl/certs/ca-certificates.crt
      - name: hagrid_service
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        load_assignment:
          cluster_name: hagrid_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.envoy.upstreams.hagridUrl }}
                    port_value: 80
{{- end }}
